
package library_management_system;

import javax.swing.JOptionPane;


public class Login extends javax.swing.JFrame {

    public static String username, passwordString;
    public static char[] passwordChar;
    public static AdminDashboard admin;
    public static UserDashboard user;
    public static Registration reg;

    public Login() {
        initComponents();
        Database.addAdmin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtFieldUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        txtFieldPassword = new javax.swing.JPasswordField();
        lblRegisterLink = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/library.png"))); // NOI18N
        jLabel1.setText("Library Management System");

        txtFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldUsernameActionPerformed(evt);
            }
        });

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        loginBtn.setBackground(new java.awt.Color(51, 51, 51));
        loginBtn.setFont(new java.awt.Font("Poppins Medium", 1, 12)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("LOGIN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        txtFieldPassword.setFont(new java.awt.Font("Poppins Black", 0, 12)); // NOI18N
        txtFieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldPasswordActionPerformed(evt);
            }
        });

        lblRegisterLink.setText("Dont have an account? Register");
        lblRegisterLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegisterLinkMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFieldUsername)
                    .addComponent(jLabel3)
                    .addComponent(loginBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRegisterLink)
                .addGap(147, 147, 147))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(txtFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRegisterLink)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        username = txtFieldUsername.getText();
        passwordChar = txtFieldPassword.getPassword();
        passwordString = new String(passwordChar);

        if (username.isEmpty() || passwordString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Must filled all fields!");
            return;
        }
        Database db = new Database();
        String sqlUser = "SELECT * FROM users WHERE username = ? AND password = ?";
        boolean isValid = db.validateLogin(sqlUser, username, passwordString);

        if (!isValid) {
            JOptionPane.showMessageDialog(this, "Username or password is invalid! Try again.");
            return;
        }
        String sql = "SELECT role FROM users WHERE username = ? AND password = ?";

        String role = db.getUserRole(sql, username, passwordString);

        if (role != null) {
            JOptionPane.showMessageDialog(this, "Login successfull!");

            switch (role) {
                case "admin":
                    openAdminDashboard();
                    break;

                case "user":
                    openUserDashborad();
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Unknown role. Access denied!");
                    break;
            }
            this.dispose();
        }

//        String[] userInfo = null;
//        
//        for (int userId : Database.userDb.keySet()) {
//            String[] currentUser = Database.userDb.get(userId);
//            if (currentUser[2].equals(username)) {
//                userInfo = currentUser;
//                break;
//            }
//        }
//        
//        if (userInfo != null && userInfo[3].equals(passwordString)) {
//            String role = userInfo[4];
//            JOptionPane.showMessageDialog(this, role.toUpperCase() + " login successfull.");
//            if (role.equals("admin")) {
//                if (dashboard == null || !dashboard.isVisible()) {
//                    dashboard = new AdminDashboard();
//                    
//                    this.dispose();
//                    dashboard.setVisible(true);
//                }
//            }
//        } else {
//            JOptionPane.showMessageDialog(this, "Invalid Username or Password try again.");
//            
//        }

    }//GEN-LAST:event_loginBtnActionPerformed
    private void openAdminDashboard() {
        if (admin == null || !admin.isVisible()) {
            admin = new AdminDashboard();

            this.dispose();
            admin.setVisible(true);
        }
    }

    private void openUserDashborad() {
        if (user == null || !user.isVisible()) {
            user = new UserDashboard();

            this.dispose();
            user.setVisible(true);
        }
    }
    private void txtFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldUsernameActionPerformed
        loginBtnActionPerformed(evt);
    }//GEN-LAST:event_txtFieldUsernameActionPerformed

    private void txtFieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldPasswordActionPerformed
        loginBtnActionPerformed(evt);
    }//GEN-LAST:event_txtFieldPasswordActionPerformed

    private void lblRegisterLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegisterLinkMouseClicked
        if (reg == null || !reg.isVisible()) {
            reg = new Registration();
            this.dispose();
            reg.setVisible(true);
        }
    }//GEN-LAST:event_lblRegisterLinkMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblRegisterLink;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField txtFieldPassword;
    private javax.swing.JTextField txtFieldUsername;
    // End of variables declaration//GEN-END:variables
}
